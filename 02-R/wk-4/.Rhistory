library("RcmdrMisc", lib.loc="C:/Program Files/R/R-3.1.1/library")
install.packages(c("aplpack", "boot", "MASS", "mime", "multcomp", "Rcmdr", "Rcpp", "rgl", "shiny"))
install.packages("devtools")
cars
scatterplot(speed~dist, data = cars)
library("car", lib.loc="C:/Program Files/R/R-3.1.1/library")
scatterplot(speed~dist, data = cars)
scatterplot(speed~dist, data = cars, smooth=FALSE)
scatterplot(speed~dist, data = cars, smooth=FALSE, frame.plot=F)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
warnings()
library(lattice)
attach(mtcars)
# scatterplots for each combination of two factors
xyplot(mpg~wt|cyl.f*gear.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
mtcars
xyplot(data = mtcars, mpg~wt|cyl.f*gear.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
attach(mtcars)
# create factors with value labels
gear.f<-factor(gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
cyl.f <-factor(cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
# scatterplots for each combination of two factors
xyplot(data = mtcars, mpg~wt|cyl.f*gear.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
source('~/.active-rstudio-document', echo=TRUE)
xyplot(data = mtcars, mpg~wt,
main="Scatterplot by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
xyplot(data = mtcars, mpg~wt,
main="Scatterplot by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight",
frame.plot=FALSE)
xyplot(data = mtcars, mpg~wt,
main="Scatterplot by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight",
frame.plot=FALSE)
scatterplot(speed~dist, data = cars, smooth=FALSE)
scatterplot(speed~dist, data = cars, smooth=FALSE, bty='n')
plot(1:7, abs(stats::rnorm(7)), type = "h", axes = FALSE)
axis(1, at = 1:7, labels = letters[1:7])
box(lty = '1373', col = 'red')
scatterplot(speed~dist, data = cars, smooth=FALSE, axes = FALSE)
scatterplot(speed~dist, data = cars, smooth=FALSE, axes = FALSE, type="h")
scatterplot(speed~dist, data = cars, smooth=FALSE, axes = FALSE, bty="n")
par(bty = 'n')
scatterplot(speed~dist, data = cars, smooth=FALSE)
install.packages(c("devtools", "highr", "httpuv", "jsonlite", "knitr", "nlme", "R6", "Rcmdr", "rgl"))
R.Version()
install.packages("KernSmooth")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("ggplot2", lib.loc="C:/Program Files/R/R-3.1.2/library")
demo()
demo(package = .packages(all.available = TRUE))
demo(graphics)
demo(graphics)
install.packages("tidyr")
install.packages(c("car", "effects", "Hmisc", "jsonlite", "mgcv", "multcomp", "mvtnorm", "RColorBrewer", "RCurl", "reshape2", "TH.data"))
install.packages(c("digest", "effects", "Rcmdr", "shiny"))
install.packages("swirl")
library("swirl", lib.loc="C:/Program Files/R/R-3.1.2/library")
swirl()
setwd("~/_Learning/Coursera/DataScienceSpecialization/datasciencecoursera/02-R/wk-4")
detach("package:swirl", unload=TRUE)
outcome <- read.csv("outcome-of-care-measures.csv")
head(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
View(outcome)
state.abb
source("best.R")
best("NY", "hert attack")
match("NY", state.abb)
match("BB", state.abb)
source("best.R")
source("best.R")
best("BB", "heart attack")
